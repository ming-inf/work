/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.0.2/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

// Apply the application plugin to add support for building an application
apply plugin: 'application'

apply plugin: 'maven'

// In this section you declare where to find the dependencies of your project
repositories {
	maven {
		url uri('C:/Users/miwong/.m2/repository')
	}
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
//    jcenter()
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    compile 'com.google.guava:guava:21.0'
    compile 'com.ibm.icu:icu4j:59.1'

	compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.1'
	compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.9.1'

	compile group: 'com.google.inject', name: 'guice', version: '4.1.0'

	compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.9.1'
	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.9.1'

	compile group: 'io.reactivex.rxjava2', name: 'rxjava', version: '2.1.7'
	compile group: 'io.reactivex.rxjava2', name: 'rxjavafx', version: '2.2.2'

	compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.58'

	compile group: 'org.apache.shiro', name: 'shiro-core', version: '1.3.2'

	compile 'info.picocli:picocli:2.2.1'

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
}

sourceSets {
    main {
        resources {
            srcDir 'resources' 
        }
    }
    test {
		resources {
			srcDir 'resources'
		}
	}
}


// Define the main class for the application
mainClassName = 'javafx.App'

jar {
  manifest {
    attributes "Main-Class": "$mainClassName"
  }

    from (configurations.compile.collect { entry -> zipTree(entry) }) {
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
    }
}